openapi: 3.0.0
info:
  title: Positive Group User Side
  version: 1.0.0
servers:
  - url: "{protocol}://localhost:{port}/{environment}"
    description: Local Development Server
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      port:
        enum:
          - "3000"
        default: "3000"
      environment:
        default: api
        enum:
          - api
# security:
#   - BearerAuth: []
paths:
  /chapters:
    get:
      summary: Returns the full list of chapters
      responses:
        "400":
          description: Error
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chapter"

  /users/signup:
    post:
      summary: Sign up for a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSignUpForm"

          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                payload:
                  $ref: "#/components/schemas/UserSignUpForm"
            encoding:
              payload:
                contentType: application/json

      responses:
        "500":
          description: Error
        "200":
          description: Created
  /users/login:
    post:
      summary: Login for users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginForm"

          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                payload:
                  $ref: "#/components/schemas/UserLoginForm"
            encoding:
              payload:
                contentType: application/json

      responses:
        "405":
          description: Wrong Password

        "400":
          description: Error

        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoginResponse"

  /courses:
    get:
      summary: Returns the full list of courses
      responses:
        "400":
          description: Error
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Course"

components:
  schemas:
    UserLoginForm:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    UserLoginResponse:
      type: object
      properties:
        token:
          type: string
          description: the bearer token
        user:
          type: string
          description: the data of the user

    UserSignUpForm:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        code:
          type: string

    Course:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
        description:
          type: string
        duration:
          type: number
        createdOn:
          type: string
        chapters:
          type: array

    User:
      type: object
      properties:
        _id:
          description: id of the user
          type: string
        firstName:
          description: first name of the user
          type: string
        lastName:
          description: last name of the user
          type: string
        birthDate:
          description: birthdate of the user
          type: string
        gender:
          description: gender of the user
          type: string
        job:
          description: job of the user
          type: string
        email:
          description: email of the user
          type: string
        password:
          description: password of the user
          type: string
        isActivated:
          description: is the account activated
          type: boolean
        invitees:
          description: users invited by this user
          type: array
        inviter:
          description: the user who invited user, null if none
          type: string
        bonus:
          description: bonus cumulated by the user
          type: string
        image:
          description: image of the user
          type: string
        phone:
          description: phone number of the user
          type: string
        location:
          description: location by governorate of the user
          type: string

    Chapter:
      properties:
        title:
          type: string
        description:
          type: string
        video:
          type: string
        course:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
